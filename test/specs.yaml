apiVersion: v1
kind: Namespace
metadata:
  name: dbkube
  labels:
    name: dbkube
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dbkube
  namespace: dbkube
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dbkube
  namespace: dbkube
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "create"]
  - apiGroups: ["batch"]
    resources: ["cronjobs"]
    verbs: ["get", "list", "create", "update", "delete", "watch"]
  - apiGroups: [""]
    resources: ["configmaps", "secrets", "services"]
    verbs: ["get", "list", "create", "update", "delete", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "create", "update", "delete", "watch"]
  - apiGroups: ["configmaps.etz.com"]
    resources: ["configmaps"]
    verbs: ["*"]
  - apiGroups: ["secrets.etz.com"]
    resources: ["secrets"]
    verbs: ["*"]
  - apiGroups: ["deployments.etz.com"]
    resources: ["deployments"]
    verbs: ["*"]
  - apiGroups: ["services.etz.com"]
    resources: ["services"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dbkube
  namespace: dbkube
subjects:
  - kind: ServiceAccount
    name: dbkube
    namespace: dbkube
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dbkube
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: configmaps.configmaps.etz.com
spec:
  group: configmaps.etz.com
  names:
    kind: ConfigMap
    listKind: ConfigMapList
    plural: configmaps
    singular: configmap
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ConfigMap is the Schema for the configmaps API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConfigMapSpec defines the desired state of ConfigMap
            properties:
              authFileLocation:
                type: string
              configFileLocation:
                type: string
              dataDirectory:
                type: string
              databaseServiceType:
                type: string
              maxConnections:
                type: integer
              port:
                type: integer
              whitelist:
                items:
                  properties:
                    address:
                      type: string
                    database:
                      type: string
                    ipmask:
                      type: string
                    method:
                      type: string
                    type:
                      type: string
                    user:
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: ConfigMapStatus defines the observed state of ConfigMap
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: deployments.deployments.etz.com
spec:
  group: deployments.etz.com
  names:
    kind: Deployment
    listKind: DeploymentList
    plural: deployments
    singular: deployment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Deployment is the Schema for the deployments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DeploymentSpec defines the desired state of Deployment
            properties:
              cpu_lim:
                type: string
              cpu_req:
                type: string
              imageName:
                type: string
              imageVersion:
                type: string
              mem_lim:
                type: string
              mem_req:
                type: string
              port:
                format: int32
                type: integer
            type: object
          status:
            description: DeploymentStatus defines the observed state of Deployment
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: secrets.secrets.etz.com
spec:
  group: secrets.etz.com
  names:
    kind: Secret
    listKind: SecretList
    plural: secrets
    singular: secret
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Secret is the Schema for the secrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretSpec defines the desired state of Secret
            properties:
              database:
                type: string
              user:
                type: string
            type: object
          status:
            description: SecretStatus defines the observed state of Secret
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: services.services.etz.com
spec:
  group: services.etz.com
  names:
    kind: Service
    listKind: ServiceList
    plural: services
    singular: service
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Service is the Schema for the services API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceSpec defines the desired state of Service
            properties:
              ports:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file'
                items:
                  properties:
                    name:
                      type: string
                    port:
                      format: int32
                      type: integer
                    protocol:
                      type: string
                    targetPort:
                      format: int32
                      type: integer
                  type: object
                type: array
            type: object
          status:
            description: ServiceStatus defines the observed state of Service
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dbkube
  namespace: dbkube
spec:
  selector:
    matchLabels:
      name: dbkube
  replicas: 1
  template:
    metadata:
      labels:
        name: dbkube
    spec:
      serviceAccountName: dbkube
      containers:
        - name: dbkube
          image: nadavbm/dbkube:v0.0.1
          command:
            - /dbkube
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi